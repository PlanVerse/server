variables:
  JIB_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  PROFILE_ACTIVE: $CI_COMMIT_REF_NAME
  JWT_ENC_PWD: $JWT_ENC_PWD

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        JASYPT_ENCRYPTOR_PASSWORD: $MAIN_ENC_PWD
        APP_PORT: 50052
    - if: $CI_COMMIT_BRANCH == "dev"
      variables:
        JASYPT_ENCRYPTOR_PASSWORD: $DEV_ENC_PWD
        APP_PORT: 50051

default:
  interruptible: true

stages:
  - build
  - deploy

build:
  stage: build
  rules:
    - if: $CI_COMMIT_REF_PROTECTED == 'true'
  cache:
    key: ${CI_COMMIT_REF_NAME}
    paths:
      - build
      - .gradle/wrapper
      - .gradle/caches
    policy: pull-push
  script:
    - echo "jib 실행"
    - ./gradlew jib --no-daemon
    - echo "jib 완료"
  tags:
    - macos

deploy:
  stage: deploy
  needs: [ build ]
  variables:
    IMAGE_PATH: $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    CONTAINER_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME
    VOLUME_PATH: "C:/service/planverse"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "dev"
  before_script:
    - docker login $CI_REGISTRY -u $TOKEN_USER --password $TOKEN_PWD
  script:
    - echo "Docker pull 시작"
    - docker pull $IMAGE_PATH
    - echo "Docker pull 완료"
    - docker stop $CONTAINER_NAME || true && docker rm -f $CONTAINER_NAME || true
    - echo "Docker Container 정지, 제거 완료"
    - docker run -d -p ${APP_PORT}:${APP_PORT} -v ${VOLUME_PATH}:/planverse --restart=unless-stopped --name $CONTAINER_NAME $IMAGE_PATH
    - echo "Docker Container 실행 완료"
    - docker system prune -f
    - echo "Docker 불필요 리소스 제거 완료"
    - echo "Docker 작업 완료"
  after_script:
    - docker logout
  tags:
    - macos
